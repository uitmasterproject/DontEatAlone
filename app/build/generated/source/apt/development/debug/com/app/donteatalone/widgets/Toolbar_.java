//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.0.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.app.donteatalone.widgets;

import android.content.Context;
import android.util.AttributeSet;
import android.widget.TextView;
import com.app.donteatalone.R;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;


/**
 * We use @SuppressWarning here because our java code
 * generator doesn't know that there is no need
 * to import OnXXXListeners from View as we already
 * are in a View.
 * 
 */
@SuppressWarnings("unused")
public final class Toolbar_
    extends com.app.donteatalone.widgets.Toolbar
    implements HasViews, OnViewChangedListener
{
    private boolean alreadyInflated_ = false;
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    public Toolbar_(Context context, AttributeSet attrs) {
        super(context, attrs);
        init_();
    }

    public static com.app.donteatalone.widgets.Toolbar build(Context context, AttributeSet attrs) {
        Toolbar_ instance = new Toolbar_(context, attrs);
        instance.onFinishInflate();
        return instance;
    }

    /**
     * The alreadyInflated_ hack is needed because of an Android bug
     * which leads to infinite calls of onFinishInflate()
     * when inflating a layout with a parent and using
     * the <merge /> tag.
     * 
     */
    @Override
    public void onFinishInflate() {
        if (!alreadyInflated_) {
            alreadyInflated_ = true;
            inflate(getContext(), R.layout.view_toolbar, this);
            onViewChangedNotifier_.notifyViewChanged(this);
        }
        super.onFinishInflate();
    }

    private void init_() {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.toolbar = ((android.support.v7.widget.Toolbar) hasViews.findViewById(R.id.view_toolbar));
        this.toolbarClose = hasViews.findViewById(R.id.view_toolbar_close);
        this.tvTitle = ((TextView) hasViews.findViewById(R.id.view_toolbar_tv_title));
        this.toolbar3Dot = hasViews.findViewById(R.id.view_toolbar_3dot);
    }
}
